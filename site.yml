---
- name: Create and configure Droplet, setup server, deliver and deploy static sites
  hosts: production
  vars_files:
    - group_vars/all.yml
  vars:
    user_name: "{{ user_name | default('bob') }}"
    email: "{{ email | default('me@example.com') }}"
    site_name: "{{ site_name | default('adamontenegro.com') }}"
    site_version: "{{ site_version | default('v1.9.0') }}"
    project_name: "{{ project_name | default('ada-project-folder') }}"
    limit: "{{ limit | default(5) }}"
  tasks:
    # Initial user setup (run as root)
    - name: Setup user and permissions
      import_tasks: playbooks/user-setup.yml
      vars:
        user_name: "{{ user_name }}"
      become: true
      remote_user: root

    # Test user permissions
    - name: Test user permissions with ping
      ansible.builtin.ping:
      become: false
      remote_user: "{{ user_name }}"

    # Enable firewall
    - name: Enable firewall
      import_tasks: playbooks/firewall.yml
      become: true

    # Set timezone
    - name: Set timezone
      import_tasks: playbooks/timezone.yml
      become: true

    # Update packages
    - name: Update packages
      import_tasks: playbooks/apt.yml
      become: true

    # Restart server
    - name: Restart server
      import_tasks: playbooks/restart.yml
      become: true

    # Setup Caddy server
    - name: Install Caddy
      import_tasks: playbooks/caddy.yml
      vars:
        email: "{{ email }}"
      become: true

    # Setup DNS records (CNAME, MX, TXT, etc.)
    - name: Manage DNS records
      import_tasks: playbooks/dns-records.yml
      vars:
        site_name: "{{ site_name }}"
      become: true

    # Deliver static site
    - name: Build and deliver static site
      import_tasks: playbooks/deliver.yml
      vars:
        site_name: "{{ site_name }}"
        site_version: "{{ site_version }}"
        project_name: "{{ project_name }}"
      become: true

    # Deploy static site
    - name: Deploy static site
      import_tasks: playbooks/deploy.yml
      vars:
        site_name: "{{ site_name }}"
        site_version: "{{ site_version }}"
      become: true

    # Read deployment log
    - name: Read deployment log
      import_tasks: playbooks/deployment-log.yml
      vars:
        site_name: "{{ site_name }}"
        limit: "{{ limit }}"
      become: true
